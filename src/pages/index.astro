---
import Layout from "../layouts/Layout.astro";
import DayFrame from "../components/DayFrame.astro";

// TODO: read and parse days from directory
const days = [1, 2, 17, 40, 41, 47, 49, 64, 65, 68];
---

<Layout title="100 Days of CSS">
  <main>
    <h1>100 Days <span class="text-gradient">CSS</span></h1>
    <p class="description">
      These are my very not consecutive attempts at the popular challenges from
      <a href="https://100dayscss.com/">100 Days CSS Challenge</a>.
    </p>
    <ul role="list" class="link-card-grid">
      {days.map((day) => <DayFrame day={day} />)}
    </ul>
  </main>
</Layout>

<style>
  main {
    margin: auto;
    padding: 1rem;
    width: calc((2 * 400px) + 3.5rem);
    max-width: calc(100% - 2rem);
    color: white;
    font-size: 20px;
    line-height: 1.6;
  }
  h1 {
    font-size: 4rem;
    font-weight: 700;
    line-height: 1;
    text-align: center;
    margin-bottom: 1em;
  }
  .text-gradient {
    background-image: var(--accent-gradient);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-size: 400%;
    background-position: 0%;
  }
  .description {
    margin-bottom: 2rem;
    border: 1px solid rgba(var(--accent-light), 25%);
    background: linear-gradient(
      rgba(var(--accent-dark), 66%),
      rgba(var(--accent-dark), 33%)
    );
    padding: 1.5rem;
    border-radius: 8px;
  }
  .description a {
    color: rgb(var(--accent-light));
  }
  .link-card-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, var(--day-container-size));
    justify-content: center;
    place-items: center;
    gap: 1.5rem;
    padding: 0;
  }
</style>
